on:
  workflow_call:
    inputs:
      # terraform
      TERRAFORM_VERSION:
        type: string
      TERRAFORM_DIRECTORY:
        type: string
        default: src
        # environment
      ENVIRONMENT:
        type: string
    secrets:
      TFSTATE_RESOURCE_GROUP_NAME:
        required: true
      TFSTATE_STORAGE_ACCOUNT_NAME:
        required: true
      TFSTATE_STORAGE_ACCOUNT_ACCESS_KEY:
        required: true
      CLIENT_ID:
        required: true
      CLIENT_SECRET:
        required: true
      SUBSCRIPTION_ID:
        required: true
      TENANT_ID:
        required: true
jobs:
  apply:
    name: plan terraform
    environment: ${{ inputs.ENVIRONMENT }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: pwsh
        working-directory: ${{ inputs.TERRAFORM_DIRECTORY }}
    env:
      ARM_CLIENT_ID: "${{ secrets.CLIENT_ID }}"
      ARM_CLIENT_SECRET: "${{ secrets.CLIENT_SECRET }}"
      ARM_SUBSCRIPTION_ID: "${{ secrets.SUBSCRIPTION_ID }}"
      ARM_TENANT_ID: "${{ secrets.TENANT_ID }}"
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: Download Terraform Artifacts
        uses: actions/download-artifact@v3
        with:
          name: terraform_plan_${{ inputs.ENVIRONMENT }}
          path: ${{github.workspace}}/${{ inputs.TERRAFORM_DIRECTORY }}
      - name: Upzip Terraform Artifacts
        run: |
          7z x -t7z terraform.7z -p"{{ $secrets.TFSTATE_STORAGE_ACCOUNT_ACCESS_KEY }}"
      - name: Install Terraform ${{ inputs.TERRAFORM_VERSION }}
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ inputs.TERRAFORM_VERSION }}
          terraform_wrapper: false
      - name: Configure Azurerm Backend
        run: |
          $backend = @"
            terraform {
                backend "azurerm" {}
            }
          "@
          Set-Content -Value $backend -Path pipeline_azurerm_backend.tf

          $backend_variables = @"
          resource_group_name  = "${{ secrets.TFSTATE_RESOURCE_GROUP_NAME }}"
          storage_account_name = "${{ secrets.TFSTATE_STORAGE_ACCOUNT_NAME }}"
          container_name       = "tfstate"
          key                  = "${{ github.event.repository.name }}.tfstate"
          "@
          Set-Content -Value $backend_variables -Path config.azurerm.tfbackend

          terraform init -backend-config="./config.azurerm.tfbackend"
        env:
          ARM_ACCESS_KEY: "${{ secrets.TFSTATE_STORAGE_ACCOUNT_ACCESS_KEY }}"
      - name: Terraform Apply
        run: |
          terraform apply terraform.plan
          
       # terraform apply - DONE
       # support testing after